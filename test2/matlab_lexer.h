// matlab_lexer.h generated by reflex 3.3.7 from matlab.l

#ifndef matlabREFLEX_MATLAB_LEXER_H
#define matlabREFLEX_MATLAB_LEXER_H
#define matlabIN_HEADER 1
#define REFLEX_VERSION "3.3.7"

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  OPTIONS USED                                                              //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#undef REFLEX_OPTION_flex
#undef REFLEX_OPTION_header_file
#undef REFLEX_OPTION_lex
#undef REFLEX_OPTION_lexer
#undef REFLEX_OPTION_noyywrap
#undef REFLEX_OPTION_outfile
#undef REFLEX_OPTION_prefix
#undef REFLEX_OPTION_yyclass

#define REFLEX_OPTION_flex                true
#define REFLEX_OPTION_header_file         "matlab_lexer.h"
#define REFLEX_OPTION_lex                 matlablex
#define REFLEX_OPTION_lexer               matlabFlexLexer
#define REFLEX_OPTION_noyywrap            true
#define REFLEX_OPTION_outfile             "lex.matlab.cpp"
#define REFLEX_OPTION_prefix              matlab
#define REFLEX_OPTION_yyclass             MatlabLexer

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  SECTION 1: %top user code                                                 //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#line 7 "matlab.l"

    #include "matlab.tab.h"  // Generated by bison
    #include <string>


////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  REGEX MATCHER                                                             //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include <reflex/matcher.h>

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  FLEX-COMPATIBLE ABSTRACT LEXER CLASS                                      //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

#include <reflex/flexlexer.h>
typedef reflex::FlexLexer<reflex::Matcher> FlexLexer;

////////////////////////////////////////////////////////////////////////////////
//                                                                            //
//  LEXER CLASS                                                               //
//                                                                            //
////////////////////////////////////////////////////////////////////////////////

class matlabFlexLexer : public FlexLexer {
#line 12 "matlab.l"

    private:
        std::string string_buf;

 public:
  matlabFlexLexer(
      // a persistent source of input, empty by default
      const reflex::Input& input = reflex::Input(),
      // optional output stream, NULL means std::cout by default
      std::ostream *os = NULL)
    :
      FlexLexer(input, os)
  {
#line 17 "matlab.l"

    // Initialization code if needed

  }
  virtual int yylex(void)
  {
    LexerError("matlabFlexLexer::yylex invoked but %option lex=matlablex is used");
    yyterminate();
  }
  // the flex lexer function defined by SECTION 2
  virtual int matlablex(void)
  {
    LexerError("matlabFlexLexer::matlablex invoked but %option yyclass=MatlabLexer is used");
    yyterminate();
  }
  // lexer functions accepting new input to scan
  int matlablex(const reflex::Input& input)
  {
    in(input);
    return matlablex();
  }
  int matlablex(const reflex::Input& input, std::ostream *os)
  {
    in(input);
    if (os)
      out(*os);
    return matlablex();
  }
};

#endif
